const durationDisplay=document.getElementById("durationDisplay"),transitionDurationSelector=document.getElementById("transitionDuration"),framerateDisplay=document.getElementById("framerateDisplay"),framerateSelector=document.getElementById("framerate"),startImage=document.getElementById("startImage"),endImage=document.getElementById("endImage"),previewImage=document.getElementById("preview"),canvas=new OffscreenCanvas(100,100),ctx=canvas.getContext("2d"),DEFAULT_DURATION=3,DEFAULT_FRAMERATE=10,CropOption={CropToStart:"CropToStart",CropToEnd:"CropToEnd",PadToStart:"PadToStart",PadToEnd:"PadToEnd"},generationSettings={duration:DEFAULT_DURATION,framerate:DEFAULT_FRAMERATE,crop:CropOption.CropToStart};durationDisplay.textContent=parseFloat(transitionDurationSelector.value).toFixed(1),transitionDurationSelector.addEventListener("input",function(a){const b=parseFloat(a.target.value).toFixed(1);durationDisplay.textContent=b,generationSettings.duration=b,enqueueRender()}),framerateDisplay.textContent=parseFloat(framerateSelector.value).toFixed(0),framerateSelector.addEventListener("input",function(a){const b=parseFloat(a.target.value).toFixed(0);framerateDisplay.textContent=b,generationSettings.framerate=b,enqueueRender()});function getSelectedCrop(){const a=document.querySelector("input[name=\"crop\"]:checked").value;generationSettings.crop=a,enqueueRender()}document.getElementsByName("crop").forEach(a=>a.addEventListener("input",getSelectedCrop)),startImage.addEventListener("change",function(a){null==generationSettings.startImage&&(generationSettings.startImage=document.createElement("img")),generationSettings.startImage.src=URL.createObjectURL(a.target.files[0]),generationSettings.startImage.onload=function(){console.log("Loaded start image",generationSettings.startImage,"size",generationSettings.startImage.width,"x",generationSettings.startImage.height),enqueueRender()}}),endImage.addEventListener("change",function(a){null==generationSettings.endImage&&(generationSettings.endImage=document.createElement("img")),generationSettings.endImage.src=URL.createObjectURL(a.target.files[0]),generationSettings.endImage.onload=function(){console.log("Loaded end image",generationSettings.endImage,"size",generationSettings.endImage.width,"x",generationSettings.endImage.height),enqueueRender()}});var renderTask=null;function enqueueRender(){clearTimeout(renderTask),renderTask=setTimeout(doRender,500)}function doRender(){var a=Math.ceil;if(console.log("Render!"),null==generationSettings.startImage)return void console.log("Missing start image");if(null==generationSettings.endImage)return void console.log("Missing end image");const b=generationSettings.crop===CropOption.CropToStart||generationSettings.crop===CropOption.PadToStart,c=calculateOutputSize(generationSettings.startImage,generationSettings.endImage,b);canvas.width=c.width,canvas.height=c.height;var d,e;switch(generationSettings.crop){case CropOption.CropToStart:case CropOption.PadToStart:ctx.drawImage(generationSettings.startImage,0,0,canvas.width,canvas.height),d=ctx.getImageData(0,0,canvas.width,canvas.height);const a=calculateScaledSize(c,generationSettings.endImage,generationSettings.crop===CropOption.CropToStart);ctx.fillStyle="black",ctx.fillRect(0,0,canvas.width,canvas.height);const b=c.width/2-a.width/2,f=c.height/2-a.height/2;ctx.drawImage(generationSettings.endImage,b,f,a.width,a.height),e=ctx.getImageData(0,0,canvas.width,canvas.height);break;case CropOption.CropToEnd:case CropOption.PadToEnd:ctx.drawImage(generationSettings.endImage,0,0,canvas.width,canvas.height),e=ctx.getImageData(0,0,canvas.width,canvas.height);const g=calculateScaledSize(c,generationSettings.startImage,generationSettings.crop===CropOption.CropToEnd);ctx.fillStyle="black",ctx.fillRect(0,0,canvas.width,canvas.height);const h=c.width/2-g.width/2,j=c.height/2-g.height/2;ctx.drawImage(generationSettings.startImage,h,j,g.width,g.height),d=ctx.getImageData(0,0,canvas.width,canvas.height)}const f=a(generationSettings.duration*generationSettings.framerate);for(URL.revokeObjectURL(previewImage.src),console.log("Rendering",f,"frames"),gif=new GIF({workers:4,quality:10}),gif.addFrame(d,{delay:1500}),frame=0;frame<=f;frame++)gif.addFrame(interpolateImages(d.data,e.data,frame/f,canvas.width),{delay:1e3/generationSettings.framerate});gif.addFrame(e,{delay:2e3}),gif.addFrame(e,{delay:1}),gif.on("finished",function(a){const b=URL.createObjectURL(a);console.log("Render complete"),previewImage.src=b}),gif.render()}function interpolateImages(c,a,b,d){const e=new Uint8ClampedArray(c.length);for(i=0;i<c.length;i++)e[i]=c[i]*(1-b)+a[i]*b;return new ImageData(e,d)}function calculateOutputSize(a,b,c){var e,f,d=Math.round;c?(e=a.width,f=a.height):(e=b.width,f=b.height);const g=e*f;if(1e6<g){const a=e/f;return 1<a?{width:1e3,height:d(1000/a)}:{width:d(1e3*a),height:1e3}}return{width:e,height:f}}function calculateScaledSize(a,b,c){const d=a.width/a.height,e=b.width/b.height;if(d>e){if(c){const c=a.width/b.width;return{width:a.width,height:b.height*c}}else{const c=a.height/b.height;return{width:b.width*c,height:a.height}}}else if(!(d<e))return{width:a.width,height:a.height};else if(c){const c=a.height/b.height;return{width:b.width*c,height:a.height}}else{const c=a.width/b.width;return{width:a.width,height:b.height*c}}}window.onload=function(){startImage.value="",endImage.value="",generationSettings.startImage=null,generationSettings.endImage=null};